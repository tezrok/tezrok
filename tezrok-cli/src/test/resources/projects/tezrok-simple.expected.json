{
  "name": "simple-app",
  "productName": "Simple Test App",
  "version": "0.0.1",
  "description": "",
  "package": "com.tezrok.simple",
  "author": "",
  "modules": [
    {
      "name": "simpleModule",
      "description": "",
      "type": "Spring",
      "schema": {
        "schemaName": "smpl",
        "importSchema": "./schemas/Orders.json",
        "entities": [
          {
            "name": "Order",
            "customRepository": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "required": true,
                "primary": true
              },
              {
                "name": "name",
                "type": "String",
                "required": true,
                "unique": true
              },
              {
                "name": "category",
                "type": "String",
                "required": true
              },
              {
                "name": "qty",
                "type": "Integer",
                "required": false
              },
              {
                "name": "created",
                "type": "DateTime",
                "required": false
              },
              {
                "name": "selectedItem",
                "type": "Item",
                "description": "The item that was selected by the user",
                "required": false,
                "logicField": true,
                "relation": "ManyToOne"
              },
              {
                "name": "selectedItemId",
                "type": "Long",
                "foreignField": "Item.id",
                "description": "Synthetic field for \"Order.selectedItem\"",
                "required": false,
                "syntheticTo": "Order.selectedItem"
              },
              {
                "name": "items",
                "type": "Item",
                "required": false,
                "logicField": true,
                "relation": "OneToMany"
              },
              {
                "name": "otherItems",
                "type": "Item",
                "required": false,
                "logicField": true,
                "relation": "ManyToMany"
              },
              {
                "name": "active",
                "type": "Boolean",
                "required": true
              },
              {
                "name": "nextOrder",
                "type": "Order",
                "logicField": true,
                "relation": "OneToOne"
              },
              {
                "name": "nextOrderId",
                "type": "Long",
                "foreignField": "Order.id",
                "description": "Synthetic field for \"Order.nextOrder\"",
                "unique": true,
                "syntheticTo": "Order.nextOrder"
              },
              {
                "name": "linkedOrders",
                "type": "Order",
                "logicField": true,
                "relation": "ManyToMany"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link OrderDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link OrderDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullOrderById",
                "description": "Gets {@link OrderFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullOrder",
                "description": "Creates {@link OrderFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullOrder",
                "description": "Updates existing {@link OrderFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullOrder",
                "description": "Imports {@link OrderFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchOrdersByTerm",
                "description": "Search {@link OrderDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getByName",
                "description": "Returns {@link OrderDto} by unique field {@link OrderDto#name}."
              },
              {
                "name": "getByNextOrderId",
                "description": "Returns {@link OrderDto} by unique field {@link OrderDto#nextOrderId}."
              },
              {
                "name": "findOrderLinkedOrdersByOrderId",
                "description": "Returns list of {@link OrderDto} by primary field to support ManyToMany relation for field {@link OrderFullDto#linkedOrders}."
              },
              {
                "name": "findOrderLinkedOrdersByOrderIdIn",
                "description": "Returns list of {@link OrderDto} by primary fields to support ManyToMany relation for field {@link OrderFullDto#linkedOrders}."
              },
              {
                "name": "getIdFieldsById",
                "description": "Returns ID fields (id, selectedItemId, nextOrderId) of {@link OrderDto} into custom class."
              },
              {
                "name": "getIdFieldsByName",
                "description": "Returns ID fields (id, selectedItemId, nextOrderId) of {@link OrderDto} by unique field (name) into custom class."
              },
              {
                "name": "findIdFieldsByIdIn",
                "description": "Returns list of ID fields (id, selectedItemId, nextOrderId) of {@link OrderDto} into custom class."
              },
              {
                "name": "getIdByName",
                "description": "Returns primary ID of {@link OrderDto} by unique field (name)."
              },
              {
                "name": "findItemRelatedOrdersByItemId",
                "description": "Returns list of {@link OrderDto} by primary field to support ManyToMany relation for field {@link ItemFullDto#relatedOrders}."
              },
              {
                "name": "findItemRelatedOrdersByItemIdIn",
                "description": "Returns list of {@link OrderDto} by primary fields to support ManyToMany relation for field {@link ItemFullDto#relatedOrders}."
              }
            ]
          },
          {
            "name": "Item",
            "customRepository": true,
            "activable": true,
            "createdAt": true,
            "updatedAt": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "required": true,
                "primary": true
              },
              {
                "name": "title",
                "type": "String",
                "required": false
              },
              {
                "name": "price",
                "type": "Double",
                "required": true
              },
              {
                "name": "otherItems",
                "type": "Item",
                "logicField": true,
                "relation": "ManyToMany"
              },
              {
                "name": "relatedOrders",
                "type": "Order",
                "description": "Related by this item orders",
                "logicField": true,
                "relation": "ManyToMany"
              },
              {
                "name": "itemsOrderId",
                "type": "Long",
                "foreignField": "Order.id",
                "description": "Synthetic field for \"Order.items\"",
                "required": false,
                "syntheticTo": "Order.items",
                "external": true
              },
              {
                "name": "active",
                "type": "Boolean",
                "description": "Is entity active or deleted",
                "required": true,
                "default": "false",
                "searchable": false
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              },
              {
                "name": "updatedAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity update",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "UpdatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link ItemDto}s.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link ItemDto} by id.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "getFullItemById",
                "description": "Gets {@link ItemFullDto} by id.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "createFullItem",
                "description": "Creates {@link ItemFullDto}.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "updateFullItem",
                "description": "Updates existing {@link ItemFullDto} by id.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "importFullItem",
                "description": "Imports {@link ItemFullDto}.",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "searchItemsByTerm",
                "description": "Search {@link ItemDto} by term (by all string fields).",
                "api": false,
                "skipGenerate": true
              },
              {
                "name": "findOrderOtherItemsByOrderIdAndItemTitle",
                "description": "Find order other items by order id and item title",
                "api": true,
                "apiPath": "/order-items-foo-bar",
                "args": {
                  "orderId": 12,
                  "itemTitle": "foo"
                }
              },
              {
                "name": "findOrderItemsByItemItemsOrderIdAndItemTitle",
                "api": true,
                "apiPath": "/order-items-and/{title}",
                "args": {
                  "param@orderId": 42,
                  "path@title": ""
                }
              },
              {
                "name": "findOrderOtherItemsByOrderId",
                "description": "Returns list of {@link ItemDto} by primary field to support ManyToMany relation for field {@link OrderFullDto#otherItems}."
              },
              {
                "name": "findOrderOtherItemsByOrderIdIn",
                "description": "Returns list of {@link ItemDto} by primary fields to support ManyToMany relation for field {@link OrderFullDto#otherItems}."
              },
              {
                "name": "findOrderItemsByItemItemsOrderId",
                "description": "Returns list of {@link ItemDto} to support OneToMany relation for field {@link OrderFullDto#items}."
              },
              {
                "name": "findIdByItemsOrderId",
                "description": "Returns list of primary field of {@link ItemDto} to support OneToMany relation for field {@link OrderFullDto#items}."
              },
              {
                "name": "findIdItemsOrderIdByItemsOrderIdIn",
                "description": "Returns specified fields (id, itemsOrderId) of {@link ItemDto} into custom class to support OneToMany relation for field {@link OrderFullDto#items}"
              },
              {
                "name": "findItemOtherItemsByItemId",
                "description": "Returns list of {@link ItemDto} by primary field to support ManyToMany relation for field {@link ItemFullDto#otherItems}."
              },
              {
                "name": "findItemOtherItemsByItemIdIn",
                "description": "Returns list of {@link ItemDto} by primary fields to support ManyToMany relation for field {@link ItemFullDto#otherItems}."
              },
              {
                "name": "getIdFieldsById",
                "description": "Returns ID fields (id, itemsOrderId) of {@link ItemDto} into custom class."
              },
              {
                "name": "findIdFieldsByIdIn",
                "description": "Returns list of ID fields (id, itemsOrderId) of {@link ItemDto} into custom class."
              }
            ],
            "stdMethodProps": {
              "api": false
            }
          },
          {
            "name": "Info",
            "fields": [
              {
                "name": "infoId",
                "type": "Long",
                "description": "Entity with \"infoId\" as \"id\" (not default)",
                "primary": true
              },
              {
                "name": "name",
                "type": "String",
                "maxLength": 100
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link InfoDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link InfoDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullInfoById",
                "description": "Gets {@link InfoFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullInfo",
                "description": "Creates {@link InfoFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullInfo",
                "description": "Updates existing {@link InfoFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullInfo",
                "description": "Imports {@link InfoFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchInfosByTerm",
                "description": "Search {@link InfoDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              }
            ]
          },
          {
            "name": "User",
            "description": "User entity",
            "customRepository": true,
            "createdAt": true,
            "updatedAt": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "primary": true
              },
              {
                "name": "name",
                "type": "String",
                "description": "User login",
                "required": true,
                "minLength": 3,
                "maxLength": 20,
                "unique": true
              },
              {
                "name": "email",
                "type": "String",
                "description": "User email",
                "required": true,
                "minLength": 4,
                "maxLength": 40,
                "unique": true,
                "metaTypes": [
                  "Email"
                ]
              },
              {
                "name": "password",
                "type": "String",
                "description": "Hashed user password",
                "required": true,
                "maxLength": 100,
                "metaTypes": [
                  "Sensitive"
                ]
              },
              {
                "name": "activated",
                "type": "Boolean",
                "required": true,
                "default": "false"
              },
              {
                "name": "banned",
                "type": "Boolean",
                "required": true,
                "default": "false"
              },
              {
                "name": "roles",
                "type": "Role",
                "logicField": true,
                "relation": "ManyToMany"
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              },
              {
                "name": "updatedAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity update",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "UpdatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link UserDto}s.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getById",
                "description": "Gets {@link UserDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getFullUserById",
                "description": "Gets {@link UserFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "createFullUser",
                "description": "Creates {@link UserFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "updateFullUser",
                "description": "Updates existing {@link UserFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "importFullUser",
                "description": "Imports {@link UserFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "searchUsersByTerm",
                "description": "Search {@link UserDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getByNameOrEmail",
                "description": "Returns {@link UserDto} by name or email."
              },
              {
                "name": "getByName",
                "description": "Returns {@link UserDto} by unique field {@link UserDto#name}."
              },
              {
                "name": "getByEmail",
                "description": "Returns {@link UserDto} by unique field {@link UserDto#email}."
              },
              {
                "name": "getIdByName",
                "description": "Returns primary ID of {@link UserDto} by unique field (name)."
              },
              {
                "name": "getIdByEmail",
                "description": "Returns primary ID of {@link UserDto} by unique field (email)."
              }
            ],
            "stdMethodProps": {
              "roles": [
                "ROLE_ADMIN"
              ]
            },
            "init": "admin,admin@site.com,admin"
          },
          {
            "name": "Role",
            "description": "Role entity",
            "customRepository": true,
            "createdAt": true,
            "updatedAt": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "primary": true,
                "primaryIdFrom": 10
              },
              {
                "name": "name",
                "type": "String",
                "description": "Role name",
                "required": true,
                "minLength": 3,
                "maxLength": 20,
                "unique": true
              },
              {
                "name": "description",
                "type": "String",
                "description": "Role description",
                "minLength": 0,
                "maxLength": 150
              },
              {
                "name": "permissions",
                "type": "Permission",
                "logicField": true,
                "relation": "ManyToMany"
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              },
              {
                "name": "updatedAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity update",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "UpdatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link RoleDto}s.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getById",
                "description": "Gets {@link RoleDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getFullRoleById",
                "description": "Gets {@link RoleFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "createFullRole",
                "description": "Creates {@link RoleFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "updateFullRole",
                "description": "Updates existing {@link RoleFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "importFullRole",
                "description": "Imports {@link RoleFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "searchRolesByTerm",
                "description": "Search {@link RoleDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getByName",
                "description": "Returns {@link RoleDto} by unique field {@link RoleDto#name}."
              },
              {
                "name": "findUserRolesByUserId",
                "description": "Returns list of {@link RoleDto} by primary field to support ManyToMany relation for field {@link UserFullDto#roles}."
              },
              {
                "name": "findUserRolesByUserIdIn",
                "description": "Returns list of {@link RoleDto} by primary fields to support ManyToMany relation for field {@link UserFullDto#roles}."
              },
              {
                "name": "getIdByName",
                "description": "Returns primary ID of {@link RoleDto} by unique field (name)."
              }
            ],
            "stdMethodProps": {
              "roles": [
                "ROLE_ADMIN"
              ]
            },
            "init": "ADMIN,Administrator role\nUSER,Authenticated role"
          },
          {
            "name": "Permission",
            "description": "Permission entity",
            "customRepository": true,
            "createdAt": true,
            "updatedAt": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "primary": true,
                "primaryIdFrom": 100
              },
              {
                "name": "name",
                "type": "String",
                "description": "Permission name",
                "required": true,
                "minLength": 3,
                "maxLength": 20,
                "unique": true
              },
              {
                "name": "description",
                "type": "String",
                "description": "Permission description",
                "minLength": 0,
                "maxLength": 150
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              },
              {
                "name": "updatedAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity update",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "UpdatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link PermissionDto}s.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getById",
                "description": "Gets {@link PermissionDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getFullPermissionById",
                "description": "Gets {@link PermissionFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "createFullPermission",
                "description": "Creates {@link PermissionFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "updateFullPermission",
                "description": "Updates existing {@link PermissionFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "importFullPermission",
                "description": "Imports {@link PermissionFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "searchPermissionsByTerm",
                "description": "Search {@link PermissionDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getByName",
                "description": "Returns {@link PermissionDto} by unique field {@link PermissionDto#name}."
              },
              {
                "name": "findRolePermissionsByRoleId",
                "description": "Returns list of {@link PermissionDto} by primary field to support ManyToMany relation for field {@link RoleFullDto#permissions}."
              },
              {
                "name": "findRolePermissionsByRoleIdIn",
                "description": "Returns list of {@link PermissionDto} by primary fields to support ManyToMany relation for field {@link RoleFullDto#permissions}."
              },
              {
                "name": "getIdByName",
                "description": "Returns primary ID of {@link PermissionDto} by unique field (name)."
              }
            ],
            "stdMethodProps": {
              "roles": [
                "ROLE_ADMIN"
              ]
            }
          },
          {
            "name": "UserProfile",
            "description": "Additional user data entity",
            "customRepository": false,
            "createdAt": true,
            "updatedAt": true,
            "fields": [
              {
                "name": "id",
                "type": "Long",
                "primary": true,
                "primaryIdFrom": 10
              },
              {
                "name": "user",
                "type": "User",
                "required": true,
                "logicField": true,
                "relation": "OneToOne"
              },
              {
                "name": "userId",
                "type": "Long",
                "foreignField": "User.id",
                "description": "Synthetic field for \"UserProfile.user\"",
                "required": true,
                "unique": true,
                "syntheticTo": "UserProfile.user"
              },
              {
                "name": "activationCode",
                "type": "String",
                "description": "Code to activate user account",
                "minLength": 36,
                "maxLength": 36,
                "unique": true
              },
              {
                "name": "passwordResetCode",
                "type": "String",
                "description": "Code to reset user password",
                "minLength": 36,
                "maxLength": 36,
                "unique": true
              },
              {
                "name": "passwordResetCodeExpireAt",
                "type": "DateTimeTZ",
                "description": "Password reset code expiration date and time"
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              },
              {
                "name": "updatedAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity update",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "UpdatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link UserProfileDto}s.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getById",
                "description": "Gets {@link UserProfileDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getFullUserProfileById",
                "description": "Gets {@link UserProfileFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "createFullUserProfile",
                "description": "Creates {@link UserProfileFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "updateFullUserProfile",
                "description": "Updates existing {@link UserProfileFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "importFullUserProfile",
                "description": "Imports {@link UserProfileFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "searchUserProfilesByTerm",
                "description": "Search {@link UserProfileDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getByUserId",
                "description": "Returns {@link UserProfileDto} by unique field {@link UserProfileDto#userId}."
              },
              {
                "name": "getByActivationCode",
                "description": "Returns {@link UserProfileDto} by unique field {@link UserProfileDto#activationCode}."
              },
              {
                "name": "getByPasswordResetCode",
                "description": "Returns {@link UserProfileDto} by unique field {@link UserProfileDto#passwordResetCode}."
              },
              {
                "name": "getIdFieldsById",
                "description": "Returns ID fields (id, userId) of {@link UserProfileDto} into custom class."
              },
              {
                "name": "getIdFieldsByActivationCode",
                "description": "Returns ID fields (id, userId) of {@link UserProfileDto} by unique field (activationCode) into custom class."
              },
              {
                "name": "getIdFieldsByPasswordResetCode",
                "description": "Returns ID fields (id, userId) of {@link UserProfileDto} by unique field (passwordResetCode) into custom class."
              },
              {
                "name": "findIdFieldsByIdIn",
                "description": "Returns list of ID fields (id, userId) of {@link UserProfileDto} into custom class."
              },
              {
                "name": "getIdByActivationCode",
                "description": "Returns primary ID of {@link UserProfileDto} by unique field (activationCode)."
              },
              {
                "name": "getIdByPasswordResetCode",
                "description": "Returns primary ID of {@link UserProfileDto} by unique field (passwordResetCode)."
              }
            ],
            "stdMethodProps": {
              "roles": [
                "ROLE_ADMIN"
              ]
            }
          },
          {
            "name": "RememberMeToken",
            "description": "Remember me token entity",
            "customRepository": false,
            "createdAt": true,
            "skipService": true,
            "skipController": true,
            "fields": [
              {
                "name": "series",
                "type": "String",
                "description": "Remember me token primary key",
                "required": true,
                "primary": true,
                "minLength": 3,
                "maxLength": 64
              },
              {
                "name": "username",
                "type": "String",
                "description": "Related user name",
                "required": true,
                "minLength": 3,
                "maxLength": 20
              },
              {
                "name": "token",
                "type": "String",
                "description": "Remember me token",
                "required": true,
                "minLength": 3,
                "maxLength": 64
              },
              {
                "name": "lastUsed",
                "type": "DateTimeTZ",
                "description": "Last used date and time",
                "required": true,
                "default": "now()"
              },
              {
                "name": "createdAt",
                "type": "DateTimeTZ",
                "description": "Date and time of entity creation",
                "required": true,
                "default": "now()",
                "searchable": false,
                "metaTypes": [
                  "CreatedAt"
                ]
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link RememberMeTokenDto}s.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getById",
                "description": "Gets {@link RememberMeTokenDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "getFullRememberMeTokenById",
                "description": "Gets {@link RememberMeTokenFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "createFullRememberMeToken",
                "description": "Creates {@link RememberMeTokenFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "updateFullRememberMeToken",
                "description": "Updates existing {@link RememberMeTokenFullDto} by id.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "importFullRememberMeToken",
                "description": "Imports {@link RememberMeTokenFullDto}.",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "searchRememberMeTokensByTerm",
                "description": "Search {@link RememberMeTokenDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true,
                "roles": [
                  "ROLE_ADMIN"
                ]
              },
              {
                "name": "findByUsername",
                "description": "Find by username."
              }
            ],
            "stdMethodProps": {
              "roles": [
                "ROLE_ADMIN"
              ]
            }
          },
          {
            "name": "OrderItemOtherItems",
            "description": "Synthetic entity of many-to-many relation for field \"Order.otherItems\"",
            "syntheticTo": "Order.otherItems",
            "fields": [
              {
                "name": "orderId",
                "type": "Long",
                "foreignField": "Order.id",
                "primary": true,
                "syntheticTo": "Order.otherItems"
              },
              {
                "name": "itemId",
                "type": "Long",
                "foreignField": "Item.id",
                "primary": true,
                "syntheticTo": "Order.otherItems"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link OrderItemOtherItemsDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link OrderItemOtherItemsDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullOrderItemOtherItemsById",
                "description": "Gets {@link OrderItemOtherItemsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullOrderItemOtherItems",
                "description": "Creates {@link OrderItemOtherItemsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullOrderItemOtherItems",
                "description": "Updates existing {@link OrderItemOtherItemsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullOrderItemOtherItems",
                "description": "Imports {@link OrderItemOtherItemsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchOrderItemOtherItemssByTerm",
                "description": "Search {@link OrderItemOtherItemsDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByOrderId"
              },
              {
                "name": "findByItemId"
              },
              {
                "name": "findByOrderIdIn"
              },
              {
                "name": "findByItemIdIn"
              }
            ]
          },
          {
            "name": "OrderOrderLinkedOrders",
            "description": "Synthetic entity of many-to-many relation for field \"Order.linkedOrders\"",
            "syntheticTo": "Order.linkedOrders",
            "fields": [
              {
                "name": "orderSourceId",
                "type": "Long",
                "foreignField": "Order.id",
                "primary": true,
                "syntheticTo": "Order.linkedOrders"
              },
              {
                "name": "orderTargetId",
                "type": "Long",
                "foreignField": "Order.id",
                "primary": true,
                "syntheticTo": "Order.linkedOrders"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link OrderOrderLinkedOrdersDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link OrderOrderLinkedOrdersDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullOrderOrderLinkedOrdersById",
                "description": "Gets {@link OrderOrderLinkedOrdersFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullOrderOrderLinkedOrders",
                "description": "Creates {@link OrderOrderLinkedOrdersFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullOrderOrderLinkedOrders",
                "description": "Updates existing {@link OrderOrderLinkedOrdersFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullOrderOrderLinkedOrders",
                "description": "Imports {@link OrderOrderLinkedOrdersFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchOrderOrderLinkedOrderssByTerm",
                "description": "Search {@link OrderOrderLinkedOrdersDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByOrderSourceId"
              },
              {
                "name": "findByOrderTargetId"
              },
              {
                "name": "findByOrderSourceIdIn"
              },
              {
                "name": "findByOrderTargetIdIn"
              }
            ]
          },
          {
            "name": "ItemItemOtherItems",
            "description": "Synthetic entity of many-to-many relation for field \"Item.otherItems\"",
            "syntheticTo": "Item.otherItems",
            "fields": [
              {
                "name": "itemSourceId",
                "type": "Long",
                "foreignField": "Item.id",
                "primary": true,
                "syntheticTo": "Item.otherItems"
              },
              {
                "name": "itemTargetId",
                "type": "Long",
                "foreignField": "Item.id",
                "primary": true,
                "syntheticTo": "Item.otherItems"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link ItemItemOtherItemsDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link ItemItemOtherItemsDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullItemItemOtherItemsById",
                "description": "Gets {@link ItemItemOtherItemsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullItemItemOtherItems",
                "description": "Creates {@link ItemItemOtherItemsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullItemItemOtherItems",
                "description": "Updates existing {@link ItemItemOtherItemsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullItemItemOtherItems",
                "description": "Imports {@link ItemItemOtherItemsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchItemItemOtherItemssByTerm",
                "description": "Search {@link ItemItemOtherItemsDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByItemSourceId"
              },
              {
                "name": "findByItemTargetId"
              },
              {
                "name": "findByItemSourceIdIn"
              },
              {
                "name": "findByItemTargetIdIn"
              }
            ]
          },
          {
            "name": "ItemOrderRelatedOrders",
            "description": "Synthetic entity of many-to-many relation for field \"Item.relatedOrders\"",
            "syntheticTo": "Item.relatedOrders",
            "fields": [
              {
                "name": "itemId",
                "type": "Long",
                "foreignField": "Item.id",
                "primary": true,
                "syntheticTo": "Item.relatedOrders"
              },
              {
                "name": "orderId",
                "type": "Long",
                "foreignField": "Order.id",
                "primary": true,
                "syntheticTo": "Item.relatedOrders"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link ItemOrderRelatedOrdersDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link ItemOrderRelatedOrdersDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullItemOrderRelatedOrdersById",
                "description": "Gets {@link ItemOrderRelatedOrdersFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullItemOrderRelatedOrders",
                "description": "Creates {@link ItemOrderRelatedOrdersFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullItemOrderRelatedOrders",
                "description": "Updates existing {@link ItemOrderRelatedOrdersFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullItemOrderRelatedOrders",
                "description": "Imports {@link ItemOrderRelatedOrdersFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchItemOrderRelatedOrderssByTerm",
                "description": "Search {@link ItemOrderRelatedOrdersDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByItemId"
              },
              {
                "name": "findByOrderId"
              },
              {
                "name": "findByItemIdIn"
              },
              {
                "name": "findByOrderIdIn"
              }
            ]
          },
          {
            "name": "UserRoleRoles",
            "description": "Synthetic entity of many-to-many relation for field \"User.roles\"",
            "syntheticTo": "User.roles",
            "fields": [
              {
                "name": "userId",
                "type": "Long",
                "foreignField": "User.id",
                "primary": true,
                "syntheticTo": "User.roles"
              },
              {
                "name": "roleId",
                "type": "Long",
                "foreignField": "Role.id",
                "primary": true,
                "syntheticTo": "User.roles"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link UserRoleRolesDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link UserRoleRolesDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullUserRoleRolesById",
                "description": "Gets {@link UserRoleRolesFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullUserRoleRoles",
                "description": "Creates {@link UserRoleRolesFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullUserRoleRoles",
                "description": "Updates existing {@link UserRoleRolesFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullUserRoleRoles",
                "description": "Imports {@link UserRoleRolesFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchUserRoleRolessByTerm",
                "description": "Search {@link UserRoleRolesDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByUserId"
              },
              {
                "name": "findByRoleId"
              },
              {
                "name": "findByUserIdIn"
              },
              {
                "name": "findByRoleIdIn"
              }
            ]
          },
          {
            "name": "RolePermissionPermissions",
            "description": "Synthetic entity of many-to-many relation for field \"Role.permissions\"",
            "syntheticTo": "Role.permissions",
            "fields": [
              {
                "name": "roleId",
                "type": "Long",
                "foreignField": "Role.id",
                "primary": true,
                "syntheticTo": "Role.permissions"
              },
              {
                "name": "permissionId",
                "type": "Long",
                "foreignField": "Permission.id",
                "primary": true,
                "syntheticTo": "Role.permissions"
              }
            ],
            "methods": [
              {
                "name": "findAll",
                "description": "Finds all {@link RolePermissionPermissionsDto}s.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getById",
                "description": "Gets {@link RolePermissionPermissionsDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "getFullRolePermissionPermissionsById",
                "description": "Gets {@link RolePermissionPermissionsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "createFullRolePermissionPermissions",
                "description": "Creates {@link RolePermissionPermissionsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "updateFullRolePermissionPermissions",
                "description": "Updates existing {@link RolePermissionPermissionsFullDto} by id.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "importFullRolePermissionPermissions",
                "description": "Imports {@link RolePermissionPermissionsFullDto}.",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "searchRolePermissionPermissionssByTerm",
                "description": "Search {@link RolePermissionPermissionsDto} by term (by all string fields).",
                "api": true,
                "skipGenerate": true
              },
              {
                "name": "findByRoleId"
              },
              {
                "name": "findByPermissionId"
              },
              {
                "name": "findByRoleIdIn"
              },
              {
                "name": "findByPermissionIdIn"
              }
            ]
          }
        ],
        "enums": []
      },
      "auth": {
        "type": "simple",
        "stdInit": true
      },
      "task": {
        "enable": true
      },
      "dependencies": [
        "commons-io:commons-io:2.13.0"
      ],
      "searchable": false,
      "properties": {}
    }
  ]
}
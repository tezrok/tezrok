package ${package}.dto.security;

import ${package}.config.ApiKeyAuthFilter;
import org.springframework.security.authentication.AbstractAuthenticationToken;
import org.springframework.security.core.userdetails.UserDetails;

/**
 * Authentication token for API key authentication.
 *
 * @see ApiKeyAuthFilter
 */
public class ApiKeyAuthenticationToken extends AbstractAuthenticationToken {

    private final String apiKey;
    private final UserDetails userDetails;

    public ApiKeyAuthenticationToken(final String apiKey, final UserDetails userDetails) {
        super(userDetails.getAuthorities());
        this.apiKey = apiKey;
        this.userDetails = userDetails;
        super.setAuthenticated(true);
    }

    @Override
    public Object getCredentials() {
        return apiKey;
    }

    @Override
    public Object getPrincipal() {
        return userDetails;
    }

    @Override
    public void setAuthenticated(final boolean isAuthenticated) throws IllegalArgumentException {
        if (isAuthenticated) {
            throw new IllegalArgumentException("Cannot set this token to trusted - use constructor which takes a GrantedAuthority list instead");
        }
        super.setAuthenticated(false);
    }

    @Override
    public String toString() {
        return "ApiKeyAuthenticationToken{" +
                "apiKey='" + apiKey + '\'' +
                ", user=" + userDetails.getUsername() +
                ", authorities=" + userDetails.getAuthorities() +
                '}';
    }
}

package ${package}.config;

import ${package}.error.RestHandlerExceptionResolver;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.client.ClientHttpRequestFactory;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.HandlerExceptionResolver;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

import java.util.List;

/**
 * WebMvc configuration.
 */
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    private final AppConfig appConfig;

    public WebMvcConfig(final AppConfig appConfig) {
        this.appConfig = appConfig;
    }

    @Override
    public void configureHandlerExceptionResolvers(final List<HandlerExceptionResolver> resolvers) {
        resolvers.add(0, new RestHandlerExceptionResolver());
    }

    @Bean
    public RestTemplate restTemplate() {
        return new RestTemplate(getClientHttpRequestFactory());
    }

    private ClientHttpRequestFactory getClientHttpRequestFactory() {
        final HttpComponentsClientHttpRequestFactory clientHttpRequestFactory = new HttpComponentsClientHttpRequestFactory();
        clientHttpRequestFactory.setConnectTimeout(appConfig.getHttpClientTimeout());
        return clientHttpRequestFactory;
    }
}
